---
#########################################
# EXAMPLE STANDALONE DEPLOYMENT
#########################################
- hosts: local
  tasks:
    # Force an ntp update as service check requires time sync to work (should not be required in production)
    - name: Sync ntp
      include_role: 
        name: ../custom-roles/roles/ntp_sync

- hosts: splunk_license_master:splunk_standalone
  # STRATEGY - free allows multiple server(s) and roles installed simultaneous and is required for service availability checks
  strategy: free
  gather_facts: True
  pre_tasks:
    # Force an ntp update as service check requires time sync to work (should not be required in production)
    - name: Sync ntp
      include_role: 
        name: ../custom-roles/roles/ntp_sync

    # PRE CONFIG - Add users
    - name: Custom splunk server pre-config (setup user)
      include_role:
        name: ../custom-roles/roles/pre_config
  
  post_tasks:
    # Set ulimits by service (assumes systemd service deployment)
    - name: Post install config
      import_tasks: ../custom-roles/roles/post_config/tasks/main.yml
  tasks:
    
    # LICENSE MASTER- check for splunk_license_master role
    - name: Splunk splunk_license_master tasks
      include_role:
        name: ../splunk-ansible/roles/splunk_license_master
      when: inventory_hostname in groups['splunk_license_master']

    # STANDALONE - check for splunk_standalone role
    - name: Splunk splunk_standalone tasks
      include_role:
        name: ../splunk-ansible/roles/splunk_standalone
      when: inventory_hostname in groups['splunk_standalone']