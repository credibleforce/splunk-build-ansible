---
#######################################################################################################################
# EXAMPLE STANDALONE DEPLOYMENT
#######################################################################################################################
- hosts: local
  vars_files:
    - ../vars/default.yml 
  pre_tasks:
  tasks:
    - name: Download Splunk
      include_role:
        name: download_splunk

#######################################################################################################################
# INSTALL STANDALONE
#######################################################################################################################

- hosts: splunk_standalone
  vars_files:
    - ../vars/default.yml
  gather_facts: True
  pre_tasks:

    # PRE CONFIG - Add users, Ulimits, etc
    - name: Include Pre Config Variable
      include_vars: ../vars/splunk_pre_config_intermediate.yml

    - name: Custom splunk server pre-config (setup user)
      include_role:
        name: pre_config

    # CUSTOM SSL CERT - Check for staged custom ssl certificate
    - name: Check if mycerts ssl override exists
      stat:
        path: "{{ splunk.home }}/etc/auth/mycerts/splunk.pem"
      register: stat_result

    - name: Use mycerts ssl override if exists
      set_fact:
        splunk:
          http_enableSSL_privKey: "{{ splunk.home }}/etc/auth/mycerts/splunk.key"
          http_enableSSL_privKey_password: "password"
          http_enableSSL_cert: "{{ splunk.home }}/etc/auth/mycerts/splunk.pem"
      when: stat_result.stat.exists

    #########################################
    # VARIABLES DEFINING DEPLOYED ENVIRONMENT
    ##########################################

    # Include additional variables as required
    - name: Include Global HEC Variable
      include_vars: ../vars/splunk_hec.yml

    - name: Include Global DFS Variable
      include_vars: ../vars/splunk_dfs.yml

    - name: Include Standalone Variables
      include_vars: ../vars/splunk_standalone.yml

  post_tasks:
    # Set ulimits by service (assumes systemd service deployment)
    - name: Post install config
      import_tasks: ../roles/post_config/tasks/main.yml
  tasks:
    # STANDALONE - check for splunk_standalone role
    - name: Splunk splunk_standalone tasks
      include_role:
        name: splunk_standalone
      when: inventory_hostname in groups['splunk_standalone']