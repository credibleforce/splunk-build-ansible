---
#########################################
# EXAMPLE STANDALONE DEPLOYMENT
#########################################
- hosts: local
  vars_files:
    - ../vars/default-standalone.yml 
  tasks:
    # Force an ntp update as service check requires time sync to work (should not be required in production)
    - name: Sync ntp
      include_role: 
        name: ntp_sync
        
    - name: Download Splunk
      include_role:
        name: download_splunk

- hosts: splunk_standalone
  vars_files:
    - ../vars/default-standalone.yml
  # STRATEGY - free allows multiple server(s) and roles installed simultaneous and is required for service availability checks
  strategy: free
  gather_facts: True
  pre_tasks:
    # Force an ntp update as service check requires time sync to work (should not be required in production)
    - name: Sync ntp
      include_role: 
        name: ntp_sync

    # PRE CONFIG - Add users
    - name: Custom splunk server pre-config (setup user)
      include_role:
        name: pre_config
  
  post_tasks:
    # Set ulimits by service (assumes systemd service deployment)
    - name: Post install config
      import_tasks: ../roles/post_config/tasks/main.yml
  tasks:
    - name: Splunk Deployment Server Variable
      debug:
        msg: 
          - "Deployment Server Value: [{{ splunk.deployment_server }}]"
          - "Deployment Server Defined: [{{ splunk.deployment_server is defined }}]"
          - "Deployment Type: [{{ deployment_type }}]"

    # STANDALONE - check for splunk_standalone role
    - name: Splunk splunk_standalone tasks
      include_role:
        name: splunk_standalone
      when: inventory_hostname in groups['splunk_standalone']