---
- name: Create outputs_indexer_cluster app directory
  file:
    path: "{{ splunk.app_paths.deployment }}/outputs_index_cluster/local"
    state: directory
    mode: '0755'
  become: yes
  become_user: "{{ splunk.user }}"

- name: Configure indexer cluster outputs deployment app
  blockinfile:
    create: yes
    path: "{{ splunk.app_paths.deployment }}/outputs_index_cluster/local/outputs.conf"
    block: |
        [indexer_discovery:splunk-indexer]
        master_uri = {{ cert_prefix }}://{{ splunk.cluster_master_url }}:{{ splunk.svc_port }}
        pass4SymmKey = {{ splunk.idxc.pass4SymmKey }}

        [tcpout:group1]
        indexerDiscovery = splunk-indexer
        clientCert = {{ splunk.s2s.cert if splunk.s2s is defined and splunk.s2s.cert is defined }}
        sslPassword = {{ splunk.s2s.password if splunk.s2s is defined and splunk.s2s.password is defined }}
        useClientSSLCompression = {{ 'true' if splunk.s2s is defined and splunk.s2s.ssl is defined and splunk.s2s.ssl else '' }}

        [tcpout]
        defaultGroup = group1

        [indexAndForward]
        index = false
  when: splunk_enable_idxc | bool
  become: yes
  become_user: "{{ splunk.user }}"

- name: Configure indexer cluster outputs deployment app
  blockinfile:
    create: yes
    path: "{{ splunk.app_paths.deployment }}/outputs_index_cluster/local/outputs.conf"
    block: |
        [tcpout:group1]
        server = {{ splunk_forward_servers }}
        clientCert = {{ splunk.s2s.cert if splunk.s2s is defined and splunk.s2s.cert is defined }}
        sslPassword = {{ splunk.s2s.password if splunk.s2s is defined and splunk.s2s.password is defined }}
        useClientSSLCompression = {{ 'true' if splunk.s2s is defined and splunk.s2s.ssl is defined and splunk.s2s.ssl else '' }}

        [tcpout]
        defaultGroup = group1

        [indexAndForward]
        index = false
  when:
    - not splunk_enable_idxc | bool
    - splunk_forward_servers is defined
  become: yes
  become_user: "{{ splunk.user }}"

- name: Update serverclass.conf with custom app
  blockinfile:
    path: "{{ splunk.home }}/etc/system/local/serverclass.conf"
    block: |

      [serverClass:all:app:outputs_indexer_cluster]
      restartSplunkWeb = 0
      restartSplunkd = 1
      stateOnClient = enabled
  become: yes
  become_user: "{{ splunk.user }}"

- name: Reload deployment server
  command: "{{ splunk.exec }} reload deploy-server -auth {{ splunk.admin_user }}:{{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  register: reload_depserver
  until: reload_depserver.rc == 0
  changed_when: reload_depserver.rc == 0
  retries: "{{ retry_num }}"
  delay: "{{ retry_delay }}"
  ignore_errors: yes
  no_log: "{{ hide_password }}"
  